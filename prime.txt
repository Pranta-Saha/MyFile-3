#define SIZE_N 100000000//max 1e8
#define SIZE_P 10000000

bool flag[SIZE_N+5];//true if prime
int primes[SIZE_P+5];

int seive()
{
        int i,j,total=0,val;
        for(i=2;i<=SIZE_N;i++) flag[i]=1;
        val=sqrt(SIZE_N)+1;
        for(i=2;i<val;i++)
                if(flag[i]){
                        for(j=i;j*i<=SIZE_N;j++){
                                if(flag[i*j])
                                {
                                        flag[i*j]=0;
                                }
                        }
                }
        for(i=2;i<=SIZE_N;i++)
                if(flag[i])
                        primes[total++]=i;
        return total;
}



//or

#define SIZE_N 100000000//max 1e8
#define SIZE_P 10000000

bool flag[SIZE_N+5];//false if prime
int primes[SIZE_P+5],total_prime=0;

int seive()
{
        int i,j,limit=sqrt(SIZE_N*1.)+2;
        flag[1]=1;
        for(i=4;i<=SIZE_N;i+=2) flag[i]=1;
        primes[total_prime++]=2;
        for(i=3;i<=SIZE_N;i+=2)
        {
                if(flag[i]==0)
                {
                        primes[total_prime++]=i;
                        if(i<=limit)
                                for(j=i*i ; j<=SIZE_N; j+=(i*2))
                                        flag[j]=1;

                }
        }
        return total_prime;
}



for single number less then 10^16
bool isPrime(ll n)
{
    if (n <= 1)  return false;
    if (n <= 3) return true;
    if (n % 2 == 0 || n % 3 == 0)
        return false;

    for (ll i = 5; i * i <= n; i = i + 6)
        if (n % i == 0 || n % (i + 2) == 0)
            return false;
    return true;
}

// mini version
 		bool prime[N];
                memset0(prime); prime[0]=1; prime[1]=1;
                for(int i=2;i*i<N;i++)
                        for(int j=i*i;j<N;j+=i)
                                prime[j]=1;